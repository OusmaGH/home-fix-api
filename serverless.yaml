service: pretest-api

useDotenv: true

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    NODE_ENV: ${env:NODE_ENV}
    PORT: ${env:PORT}

    MYSQL_TYPE: ${env:MYSQL_TYPE}
    MYSQL_HOST: ${env:MYSQL_HOST}
    MYSQL_TCP_PORT: ${env:MYSQL_TCP_PORT}
    MYSQL_DATABASE: ${env:MYSQL_DATABASE}
    MYSQL_USER: ${env:MYSQL_USER}
    MYSQL_PASSWORD: ${env:MYSQL_PASSWORD}

    SALT_ROUNDS: ${env:SALT_ROUNDS}
    ACCESS_TOKEN_EXPIRATION_TIME: ${env:ACCESS_TOKEN_EXPIRATION_TIME}
    REFRESH_TOKEN_EXPIRATION_TIME: ${env:REFRESH_TOKEN_EXPIRATION_TIME}
    JWTCONST: ${env:JWTCONST}
    AT_SECRET_JWT: ${env:AT_SECRET_JWT}
    RT_SECRET_JWT: ${env:RT_SECRET_JWT}

    RESET_PASSWORD_LINK: ${env:RESET_PASSWORD_LINK}

    SMTP_ADMIN: ${env:SMTP_ADMIN}
    SMTP_HOST: ${env:SMTP_HOST}
    SMTP_PORT: ${env:SMTP_PORT}
    SMTP_USER: ${env:SMTP_USER}
    SMTP_PASS: ${env:SMTP_PASS}

functions:
  main:
    handler: dist/serverless.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'
